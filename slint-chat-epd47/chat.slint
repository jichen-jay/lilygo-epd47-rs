// Chat interface adapted for e-paper display (no colors, optimized for grayscale)

import { Button, ScrollView, LineEdit, VerticalBox, HorizontalBox } from "std-widgets.slint";

// Chat message structure
export struct ChatMessage {
    content: string,
    is-user: bool,
    timestamp: string,
}

// Main chat window
export component ChatWindow inherits Window {
    // Properties
    property <[ChatMessage]> messages: [];
    property <string> current-message: "";
    property <bool> is-loading: false;
    
    // Callbacks
    callback send-message(string);
    callback clear-chat();
    
    // Window configuration for EPD47 (960x540)
    width: 960px;
    height: 540px;
    title: "ChatGPT Clone - EPD47";
    
    // No background color for e-paper compatibility
    background: #ffffff;
    
    VerticalBox {
        spacing: 0px;
        
        // Header
        header := Rectangle {
            height: 50px;
            background: #000000;
            
            HorizontalBox {
                alignment: center;
                
                Text {
                    text: "ChatGPT Clone";
                    color: #ffffff;
                    font-size: 16px;
                    font-weight: 700;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
            }
        }
        
        // Chat messages area
        chat-area := Rectangle {
            background: #ffffff;
            border-width: 1px;
            border-color: #000000;
            
            ScrollView {
                viewport-height: messages.length * 100px; // Rough estimate
                
                VerticalBox {
                    alignment: start;
                    spacing: 10px;
                    padding: 10px;
                    
                    for message[index] in messages : MessageBubble {
                        message: message;
                        width: parent.width - 20px;
                    }
                    
                    // Loading indicator
                    if is-loading : LoadingIndicator {
                        width: parent.width - 20px;
                    }
                }
            }
        }
        
        // Input area
        input-area := Rectangle {
            height: 80px;
            background: #f0f0f0;
            border-width: 1px;
            border-color: #000000;
            
            HorizontalBox {
                spacing: 10px;
                padding: 10px;
                
                message-input := LineEdit {
                    text: current-message;
                    placeholder-text: "Type your message...";
                    font-size: 14px;
                    
                    // Handle Enter key
                    accepted => {
                        if (self.text != "") {
                            send-message(self.text);
                            self.text = "";
                        }
                    }
                    
                    edited(text) => {
                        current-message = text;
                    }
                }
                
                send-button := Button {
                    text: "Send";
                    width: 80px;
                    enabled: current-message != "" && !is-loading;
                    
                    clicked => {
                        if (current-message != "") {
                            send-message(current-message);
                            current-message = "";
                            message-input.text = "";
                        }
                    }
                }
                
                clear-button := Button {
                    text: "Clear";
                    width: 60px;
                    
                    clicked => {
                        clear-chat();
                    }
                }
            }
        }
    }
}

// Individual message bubble component
component MessageBubble inherits Rectangle {
    property <ChatMessage> message;
    
    height: content-height + 20px;
    
    // Calculate bubble position and style based on sender
    property <length> bubble-width: message.is-user ? parent.width * 0.7 : parent.width * 0.8;
    property <length> bubble-x: message.is-user ? parent.width - bubble-width - 10px : 10px;
    property <color> bubble-color: message.is-user ? #e0e0e0 : #f5f5f5;
    property <color> text-color: #000000;
    property <length> content-height: message-text.preferred-height + timestamp-text.preferred-height + 10px;
    
    // Message bubble
    bubble := Rectangle {
        x: bubble-x;
        width: bubble-width;
        height: parent.height - 10px;
        background: bubble-color;
        border-width: 1px;
        border-color: #000000;
        border-radius: 8px;
        
        VerticalBox {
            padding: 10px;
            spacing: 5px;
            
            // Message content
            message-text := Text {
                text: message.content;
                color: text-color;
                font-size: 12px;
                wrap: word-wrap;
                horizontal-alignment: left;
                vertical-alignment: top;
            }
            
            // Timestamp and sender
            timestamp-container := HorizontalBox {
                alignment: message.is-user ? end : start;
                
                timestamp-text := Text {
                    text: (message.is-user ? "You" : "AI") + " â€¢ " + message.timestamp;
                    color: #666666;
                    font-size: 10px;
                    horizontal-alignment: message.is-user ? right : left;
                }
            }
        }
    }
}

// Loading indicator component
component LoadingIndicator inherits Rectangle {
    height: 50px;
    background: #f9f9f9;
    border-width: 1px;
    border-color: #e0e0e0;
    border-radius: 8px;
    
    HorizontalBox {
        alignment: center;
        spacing: 10px;
        
        Text {
            text: "AI is thinking...";
            color: #666666;
            font-size: 12px;
            font-style: italic;
        }
        
        // Simple loading dots (since we can't animate on e-paper)
        HorizontalBox {
            spacing: 3px;
            
            Rectangle {
                width: 6px;
                height: 6px;
                background: #999999;
                border-radius: 3px;
            }
            
            Rectangle {
                width: 6px;
                height: 6px;
                background: #999999;
                border-radius: 3px;
            }
            
            Rectangle {
                width: 6px;
                height: 6px;
                background: #999999;
                border-radius: 3px;
            }
        }
    }
}

// Welcome screen component
export component WelcomeScreen inherits Window {
    width: 960px;
    height: 540px;
    background: #ffffff;
    
    callback start-chat();
    
    VerticalBox {
        alignment: center;
        spacing: 30px;
        
        // Title
        Text {
            text: "ChatGPT Clone";
            font-size: 24px;
            font-weight: 700;
            color: #000000;
            horizontal-alignment: center;
        }
        
        // Subtitle
        Text {
            text: "Running on E-Paper Display";
            font-size: 16px;
            color: #666666;
            horizontal-alignment: center;
        }
        
        // Description
        Text {
            text: "Optimized for grayscale display\nLow power consumption\nPaper-like reading experience";
            font-size: 12px;
            color: #333333;
            horizontal-alignment: center;
            vertical-alignment: center;
        }
        
        // Start button
        Button {
            text: "Start Chatting";
            width: 150px;
            height: 40px;
            
            clicked => {
                start-chat();
            }
        }
        
        // Info text
        Text {
            text: "Demo Mode - Responses are simulated";
            font-size: 10px;
            color: #999999;
            horizontal-alignment: center;
        }
    }
}